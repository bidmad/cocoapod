// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name BidmadAdapterFC
import AdColony
import AppLovinSDK
@_exported import BidmadAdapterFC
import Swift
import UIKit
import UnityAds
@_inheritsConvenienceInitializers @objc public class BidmadAdapterFCUtility : ObjectiveC.NSObject {
  @objc deinit
  @objc override dynamic public init()
}
@objc open class BidmadAdapterFCAdEssential : ObjectiveC.NSObject {
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func setBidmadController(_ bidmadController: Swift.AnyObject)
  @objc deinit
  @objc override dynamic public init()
}
@_inheritsConvenienceInitializers @objc open class BidmadAppLovinReward : BidmadAdapterFC.BidmadAdapterFCAdEssential {
  public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc deinit
}
extension BidmadAppLovinReward {
  @objc dynamic public func load()
  @objc dynamic public func setIsDebug(_ isDebug: Swift.Bool)
  @objc dynamic public func show()
  @objc dynamic public func remove()
  @objc dynamic public func setIsRewardedAd(_ isRewardedAd: Swift.Bool)
}
extension BidmadAppLovinReward : AppLovinSDK.ALAdDisplayDelegate {
  @objc dynamic public func ad(_ ad: AppLovinSDK.ALAd, wasDisplayedIn view: UIKit.UIView)
  @objc dynamic public func ad(_ ad: AppLovinSDK.ALAd, wasHiddenIn view: UIKit.UIView)
  @objc dynamic public func ad(_ ad: AppLovinSDK.ALAd, wasClickedIn view: UIKit.UIView)
}
extension BidmadAppLovinReward : AppLovinSDK.ALAdLoadDelegate {
  @objc dynamic public func adService(_ adService: AppLovinSDK.ALAdService, didLoad ad: AppLovinSDK.ALAd)
  @objc dynamic public func adService(_ adService: AppLovinSDK.ALAdService, didFailToLoadAdWithError code: Swift.Int32)
}
extension BidmadAppLovinReward : AppLovinSDK.ALAdRewardDelegate {
  @objc dynamic public func rewardValidationRequest(for ad: AppLovinSDK.ALAd, didSucceedWithResponse response: [Swift.AnyHashable : Any])
  @objc dynamic public func rewardValidationRequest(for ad: AppLovinSDK.ALAd, didExceedQuotaWithResponse response: [Swift.AnyHashable : Any])
  @objc dynamic public func rewardValidationRequest(for ad: AppLovinSDK.ALAd, wasRejectedWithResponse response: [Swift.AnyHashable : Any])
  @objc dynamic public func rewardValidationRequest(for ad: AppLovinSDK.ALAd, didFailWithError responseCode: Swift.Int)
}
extension BidmadAppLovinReward : AppLovinSDK.ALAdVideoPlaybackDelegate {
  @objc dynamic public func videoPlaybackBegan(in ad: AppLovinSDK.ALAd)
  @objc dynamic public func videoPlaybackEnded(in ad: AppLovinSDK.ALAd, atPlaybackPercent percentPlayed: Foundation.NSNumber, fullyWatched wasFullyWatched: Swift.Bool)
}
@_inheritsConvenienceInitializers @objc open class BidmadAppLovinBanner : BidmadAdapterFC.BidmadAdapterFCAdEssential {
  public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc deinit
}
extension BidmadAppLovinBanner {
  @objc dynamic public func load()
  @objc dynamic public func setIsDebug(_ isDebug: Swift.Bool)
  @objc dynamic public func setBannerSize(_ sizeString: Swift.String)
  @objc dynamic public func show()
  @objc dynamic public func hide()
  @objc dynamic public func remove()
}
extension BidmadAppLovinBanner : AppLovinSDK.ALAdLoadDelegate {
  @objc dynamic public func adService(_ adService: AppLovinSDK.ALAdService, didLoad ad: AppLovinSDK.ALAd)
  @objc dynamic public func adService(_ adService: AppLovinSDK.ALAdService, didFailToLoadAdWithError code: Swift.Int32)
}
extension BidmadAppLovinBanner : AppLovinSDK.ALAdDisplayDelegate {
  @objc dynamic public func ad(_ ad: AppLovinSDK.ALAd, wasDisplayedIn view: UIKit.UIView)
  @objc dynamic public func ad(_ ad: AppLovinSDK.ALAd, wasHiddenIn view: UIKit.UIView)
  @objc dynamic public func ad(_ ad: AppLovinSDK.ALAd, wasClickedIn view: UIKit.UIView)
}
extension BidmadAppLovinBanner : AppLovinSDK.ALAdViewEventDelegate {
  @objc dynamic public func ad(_ ad: AppLovinSDK.ALAd, didPresentFullscreenFor adView: AppLovinSDK.ALAdView)
  @objc dynamic public func ad(_ ad: AppLovinSDK.ALAd, willDismissFullscreenFor adView: AppLovinSDK.ALAdView)
  @objc dynamic public func ad(_ ad: AppLovinSDK.ALAd, didDismissFullscreenFor adView: AppLovinSDK.ALAdView)
  @objc dynamic public func ad(_ ad: AppLovinSDK.ALAd, willLeaveApplicationFor adView: AppLovinSDK.ALAdView)
  @objc dynamic public func ad(_ ad: AppLovinSDK.ALAd, didReturnToApplicationFor adView: AppLovinSDK.ALAdView)
  @objc dynamic public func ad(_ ad: AppLovinSDK.ALAd, didFailToDisplayIn adView: AppLovinSDK.ALAdView, withError code: AppLovinSDK.ALAdViewDisplayErrorCode)
}
@_inheritsConvenienceInitializers @objc open class BidmadAppLovinInterstitial : BidmadAdapterFC.BidmadAdapterFCAdEssential {
  public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc deinit
}
extension BidmadAppLovinInterstitial {
  @objc dynamic public func load()
  @objc dynamic public func setIsDebug(_ isDebug: Swift.Bool)
  @objc dynamic public func show()
  @objc dynamic public func remove()
}
extension BidmadAppLovinInterstitial : AppLovinSDK.ALAdLoadDelegate {
  @objc dynamic public func adService(_ adService: AppLovinSDK.ALAdService, didLoad ad: AppLovinSDK.ALAd)
  @objc dynamic public func adService(_ adService: AppLovinSDK.ALAdService, didFailToLoadAdWithError code: Swift.Int32)
}
extension BidmadAppLovinInterstitial : AppLovinSDK.ALAdDisplayDelegate {
  @objc dynamic public func ad(_ ad: AppLovinSDK.ALAd, wasDisplayedIn view: UIKit.UIView)
  @objc dynamic public func ad(_ ad: AppLovinSDK.ALAd, wasHiddenIn view: UIKit.UIView)
  @objc dynamic public func ad(_ ad: AppLovinSDK.ALAd, wasClickedIn view: UIKit.UIView)
}
extension BidmadAppLovinInterstitial : AppLovinSDK.ALAdVideoPlaybackDelegate {
  @objc dynamic public func videoPlaybackBegan(in ad: AppLovinSDK.ALAd)
  @objc dynamic public func videoPlaybackEnded(in ad: AppLovinSDK.ALAd, atPlaybackPercent percentPlayed: Foundation.NSNumber, fullyWatched wasFullyWatched: Swift.Bool)
}
@_inheritsConvenienceInitializers @objc open class BidmadUnityAdsInterstitial : BidmadAdapterFC.BidmadAdapterFCAdEssential {
  public static var UNITYADS_TEST_APPID: Swift.String
  public static func UNITYADS_TEST_PUBID(_ isRewardedAd: Swift.Bool) -> Swift.String
  public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc deinit
}
extension BidmadUnityAdsInterstitial : UnityAds.UnityAdsInitializationDelegate {
  @objc dynamic public func initializationComplete()
  @objc dynamic public func initializationFailed(_ error: UnityAds.UnityAdsInitializationError, withMessage message: Swift.String)
}
extension BidmadUnityAdsInterstitial {
  @objc dynamic public func load()
  @objc dynamic public func setIsDebug(_ isDebug: Swift.Bool)
  @objc dynamic public func setIsRewardedAd(_ isRewardedAd: Swift.Bool)
  @objc dynamic public func show()
  @objc dynamic public func remove()
}
extension BidmadUnityAdsInterstitial : UnityAds.UnityAdsLoadDelegate {
  @objc dynamic public func unityAdsAdLoaded(_ placementId: Swift.String)
  @objc dynamic public func unityAdsAdFailed(toLoad placementId: Swift.String, withError error: UnityAds.UnityAdsLoadError, withMessage message: Swift.String)
}
extension BidmadUnityAdsInterstitial : UnityAds.UnityAdsShowDelegate {
  @objc dynamic public func unityAdsShowComplete(_ placementId: Swift.String, withFinish state: UnityAds.UnityAdsShowCompletionState)
  @objc dynamic public func unityAdsShowFailed(_ placementId: Swift.String, withError error: UnityAds.UnityAdsShowError, withMessage message: Swift.String)
  @objc dynamic public func unityAdsShowStart(_ placementId: Swift.String)
  @objc dynamic public func unityAdsShowClick(_ placementId: Swift.String)
}
@_inheritsConvenienceInitializers @objc open class BidmadAdColonyInterstitial : BidmadAdapterFC.BidmadAdapterFCAdEssential {
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc deinit
}
extension BidmadAdColonyInterstitial {
  @objc dynamic public func load()
  @objc dynamic public func setIsDebug(_ isDebug: Swift.Bool)
  @objc dynamic public func setIsRewardedAd(_ isRewardedAd: Swift.Bool)
  @objc dynamic public func show()
  @objc dynamic public func remove()
}
extension BidmadAdColonyInterstitial : AdColony.AdColonyInterstitialDelegate {
  @objc dynamic public func adColonyInterstitialDidLoad(_ interstitial: AdColony.AdColonyInterstitial)
  @objc dynamic public func adColonyInterstitialDidFail(toLoad error: AdColony.AdColonyAdRequestError)
  @objc dynamic public func adColonyInterstitialExpired(_ interstitial: AdColony.AdColonyInterstitial)
  @objc dynamic public func adColonyInterstitialDidReceiveClick(_ interstitial: AdColony.AdColonyInterstitial)
  @objc dynamic public func adColonyInterstitialWillOpen(_ interstitial: AdColony.AdColonyInterstitial)
  @objc dynamic public func adColonyInterstitialDidClose(_ interstitial: AdColony.AdColonyInterstitial)
}
@_inheritsConvenienceInitializers @objc open class BidmadUnityAdsBanner : BidmadAdapterFC.BidmadAdapterFCAdEssential {
  public static var UNITYADS_TEST_APPID: Swift.String
  public static var UNITYADS_TEST_PUBID: Swift.String
  public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc deinit
}
extension BidmadUnityAdsBanner : UnityAds.UnityAdsInitializationDelegate {
  @objc dynamic public func initializationComplete()
  @objc dynamic public func initializationFailed(_ error: UnityAds.UnityAdsInitializationError, withMessage message: Swift.String)
}
extension BidmadUnityAdsBanner {
  @objc dynamic public func load()
  @objc dynamic public func setIsDebug(_ isDebug: Swift.Bool)
  @objc dynamic public func setBannerSize(_ sizeString: Swift.String)
  @objc dynamic public func show()
  @objc dynamic public func hide()
  @objc dynamic public func remove()
}
extension BidmadUnityAdsBanner : UnityAds.UADSBannerViewDelegate {
  @objc dynamic public func bannerViewDidLoad(_ bannerView: UnityAds.UADSBannerView!)
  @objc dynamic public func bannerViewDidClick(_ bannerView: UnityAds.UADSBannerView!)
  @objc dynamic public func bannerViewDidLeaveApplication(_ bannerView: UnityAds.UADSBannerView!)
  @objc dynamic public func bannerViewDidError(_ bannerView: UnityAds.UADSBannerView!, error: UnityAds.UADSBannerError!)
}
@_inheritsConvenienceInitializers @objc open class BidmadAdColonyBanner : BidmadAdapterFC.BidmadAdapterFCAdEssential {
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc deinit
}
extension BidmadAdColonyBanner {
  @objc dynamic public func load()
  @objc dynamic public func setIsDebug(_ isDebug: Swift.Bool)
  @objc dynamic public func setBannerSize(_ sizeString: Swift.String)
  @objc dynamic public func show()
  @objc dynamic public func hide()
  @objc dynamic public func remove()
}
extension BidmadAdColonyBanner : AdColony.AdColonyAdViewDelegate {
  @objc dynamic public func adColonyAdViewDidLoad(_ adView: AdColony.AdColonyAdView)
  @objc dynamic public func adColonyAdViewDidFail(toLoad error: AdColony.AdColonyAdRequestError)
  @objc dynamic public func adColonyAdViewDidReceiveClick(_ adView: AdColony.AdColonyAdView)
}
