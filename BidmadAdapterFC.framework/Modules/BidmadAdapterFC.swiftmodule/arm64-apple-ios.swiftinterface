// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name BidmadAdapterFC
import AdColony
import AppLovinSDK
import Swift
import UIKit
import UnityAds
@objc open class BidmadAppLovinReward : ObjectiveC.NSObject {
  public static var APPLOVIN_TEST_APPID: Swift.String
  public static var APPLOVIN_TEST_SDK_KEY: Swift.String
  public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?)
  @objc deinit
  @objc override dynamic public init()
}
extension BidmadAppLovinReward {
  @objc dynamic public func load()
  @objc dynamic public func setExtra(_ extra: [Swift.String : Any])
  @objc dynamic public func setBidmadController(_ bidmadController: Swift.AnyObject)
  @objc dynamic public func show()
  @objc dynamic public func hide()
  @objc dynamic public func remove()
}
extension BidmadAppLovinReward : AppLovinSDK.MARewardedAdDelegate {
  @objc dynamic public func didStartRewardedVideo(for ad: AppLovinSDK.MAAd)
  @objc dynamic public func didCompleteRewardedVideo(for ad: AppLovinSDK.MAAd)
  @objc dynamic public func didRewardUser(for ad: AppLovinSDK.MAAd, with reward: AppLovinSDK.MAReward)
  @objc dynamic public func didLoad(_ ad: AppLovinSDK.MAAd)
  @objc dynamic public func didFailToLoadAd(forAdUnitIdentifier adUnitIdentifier: Swift.String, withError error: AppLovinSDK.MAError)
  @objc dynamic public func didDisplay(_ ad: AppLovinSDK.MAAd)
  @objc dynamic public func didHide(_ ad: AppLovinSDK.MAAd)
  @objc dynamic public func didClick(_ ad: AppLovinSDK.MAAd)
  @objc dynamic public func didFail(toDisplay ad: AppLovinSDK.MAAd, withError error: AppLovinSDK.MAError)
}
@objc open class BidmadAppLovinInterstitial : ObjectiveC.NSObject {
  public static var APPLOVIN_TEST_APPID: Swift.String
  public static var APPLOVIN_TEST_SDK_KEY: Swift.String
  public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?)
  @objc override dynamic public init()
  @objc deinit
}
extension BidmadAppLovinInterstitial {
  @objc dynamic public func load()
  @objc dynamic public func setExtra(_ extra: [Swift.String : Any])
  @objc dynamic public func setBidmadController(_ bidmadController: Swift.AnyObject)
  @objc dynamic public func show()
  @objc dynamic public func hide()
  @objc dynamic public func remove()
}
extension BidmadAppLovinInterstitial : AppLovinSDK.MAAdDelegate {
  @objc dynamic public func didLoad(_ ad: AppLovinSDK.MAAd)
  @objc dynamic public func didFailToLoadAd(forAdUnitIdentifier adUnitIdentifier: Swift.String, withError error: AppLovinSDK.MAError)
  @objc dynamic public func didDisplay(_ ad: AppLovinSDK.MAAd)
  @objc dynamic public func didHide(_ ad: AppLovinSDK.MAAd)
  @objc dynamic public func didClick(_ ad: AppLovinSDK.MAAd)
  @objc dynamic public func didFail(toDisplay ad: AppLovinSDK.MAAd, withError error: AppLovinSDK.MAError)
}
@objc open class BidmadAppLovinBanner : ObjectiveC.NSObject {
  public static var APPLOVIN_TEST_APPID: Swift.String
  public static var APPLOVIN_TEST_SDK_KEY: Swift.String
  public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?)
  @objc override dynamic public init()
  @objc deinit
}
extension BidmadAppLovinBanner {
  @objc dynamic public func load()
  @objc dynamic public func setExtra(_ extra: [Swift.String : Any])
  @objc dynamic public func setBidmadController(_ bidmadController: Swift.AnyObject)
  @objc dynamic public func show()
  @objc dynamic public func hide()
  @objc dynamic public func remove()
}
extension BidmadAppLovinBanner : AppLovinSDK.MAAdViewAdDelegate {
  @objc dynamic public func didExpand(_ ad: AppLovinSDK.MAAd)
  @objc dynamic public func didCollapse(_ ad: AppLovinSDK.MAAd)
  @objc dynamic public func didLoad(_ ad: AppLovinSDK.MAAd)
  @objc dynamic public func didFailToLoadAd(forAdUnitIdentifier adUnitIdentifier: Swift.String, withError error: AppLovinSDK.MAError)
  @objc dynamic public func didDisplay(_ ad: AppLovinSDK.MAAd)
  @objc dynamic public func didHide(_ ad: AppLovinSDK.MAAd)
  @objc dynamic public func didClick(_ ad: AppLovinSDK.MAAd)
  @objc dynamic public func didFail(toDisplay ad: AppLovinSDK.MAAd, withError error: AppLovinSDK.MAError)
}
@objc open class BidmadUnityAdsInterstitial : ObjectiveC.NSObject {
  public static var UNITYADS_TEST_APPID: Swift.String
  public static func UNITYADS_TEST_PUBID(_ isRewardedAd: Swift.Bool) -> Swift.String
  public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?)
  @objc override dynamic public init()
  @objc deinit
}
extension BidmadUnityAdsInterstitial : UnityAds.UnityAdsInitializationDelegate {
  @objc dynamic public func initializationComplete()
  @objc dynamic public func initializationFailed(_ error: UnityAds.UnityAdsInitializationError, withMessage message: Swift.String)
}
extension BidmadUnityAdsInterstitial {
  @objc dynamic public func load()
  @objc dynamic public func setExtra(_ extra: [Swift.String : Any])
  @objc dynamic public func setBidmadController(_ bidmadController: Swift.AnyObject)
  @objc dynamic public func show()
  @objc dynamic public func hide()
  @objc dynamic public func remove()
}
extension BidmadUnityAdsInterstitial : UnityAds.UnityAdsLoadDelegate {
  @objc dynamic public func unityAdsAdLoaded(_ placementId: Swift.String)
  @objc dynamic public func unityAdsAdFailed(toLoad placementId: Swift.String, withError error: UnityAds.UnityAdsLoadError, withMessage message: Swift.String)
}
extension BidmadUnityAdsInterstitial : UnityAds.UnityAdsShowDelegate {
  @objc dynamic public func unityAdsShowComplete(_ placementId: Swift.String, withFinish state: UnityAds.UnityAdsShowCompletionState)
  @objc dynamic public func unityAdsShowFailed(_ placementId: Swift.String, withError error: UnityAds.UnityAdsShowError, withMessage message: Swift.String)
  @objc dynamic public func unityAdsShowStart(_ placementId: Swift.String)
  @objc dynamic public func unityAdsShowClick(_ placementId: Swift.String)
}
@objc open class BidmadAdColonyInterstitial : ObjectiveC.NSObject {
  public static var ADC_TEST_APPID: Swift.String
  public static var ADC_TEST_ZONEID: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?)
  @objc override dynamic public init()
  @objc deinit
}
extension BidmadAdColonyInterstitial {
  @objc dynamic public func load()
  @objc dynamic public func setExtra(_ extra: [Swift.String : Any])
  @objc dynamic public func setBidmadController(_ bidmadController: Swift.AnyObject)
  @objc dynamic public func show()
  @objc dynamic public func hide()
  @objc dynamic public func remove()
}
extension BidmadAdColonyInterstitial : AdColony.AdColonyInterstitialDelegate {
  @objc dynamic public func adColonyInterstitialDidLoad(_ interstitial: AdColony.AdColonyInterstitial)
  @objc dynamic public func adColonyInterstitialDidFail(toLoad error: AdColony.AdColonyAdRequestError)
  @objc dynamic public func adColonyInterstitialExpired(_ interstitial: AdColony.AdColonyInterstitial)
  @objc dynamic public func adColonyInterstitialDidReceiveClick(_ interstitial: AdColony.AdColonyInterstitial)
  @objc dynamic public func adColonyInterstitialWillOpen(_ interstitial: AdColony.AdColonyInterstitial)
  @objc dynamic public func adColonyInterstitialDidClose(_ interstitial: AdColony.AdColonyInterstitial)
}
@objc open class BidmadUnityAdsBanner : ObjectiveC.NSObject {
  public static var UNITYADS_TEST_APPID: Swift.String
  public static var UNITYADS_TEST_PUBID: Swift.String
  public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?)
  @objc override dynamic public init()
  @objc deinit
}
extension BidmadUnityAdsBanner : UnityAds.UnityAdsInitializationDelegate {
  @objc dynamic public func initializationComplete()
  @objc dynamic public func initializationFailed(_ error: UnityAds.UnityAdsInitializationError, withMessage message: Swift.String)
}
extension BidmadUnityAdsBanner {
  @objc dynamic public func load()
  @objc dynamic public func setExtra(_ extra: [Swift.String : Any])
  @objc dynamic public func setBidmadController(_ bidmadController: Swift.AnyObject)
  @objc dynamic public func show()
  @objc dynamic public func hide()
  @objc dynamic public func remove()
}
extension BidmadUnityAdsBanner : UnityAds.UADSBannerViewDelegate {
  @objc dynamic public func bannerViewDidLoad(_ bannerView: UnityAds.UADSBannerView!)
  @objc dynamic public func bannerViewDidClick(_ bannerView: UnityAds.UADSBannerView!)
  @objc dynamic public func bannerViewDidLeaveApplication(_ bannerView: UnityAds.UADSBannerView!)
  @objc dynamic public func bannerViewDidError(_ bannerView: UnityAds.UADSBannerView!, error: UnityAds.UADSBannerError!)
}
@objc open class BidmadAdColonyBanner : ObjectiveC.NSObject {
  public static var ADC_TEST_APPID: Swift.String
  public static var ADC_TEST_ZONEID: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?)
  @objc override dynamic public init()
  @objc deinit
}
extension BidmadAdColonyBanner {
  @objc dynamic public func load()
  @objc dynamic public func setExtra(_ extra: [Swift.String : Any])
  @objc dynamic public func setBidmadController(_ bidmadController: Swift.AnyObject)
  @objc dynamic public func show()
  @objc dynamic public func hide()
  @objc dynamic public func remove()
}
extension BidmadAdColonyBanner : AdColony.AdColonyAdViewDelegate {
  @objc dynamic public func adColonyAdViewDidLoad(_ adView: AdColony.AdColonyAdView)
  @objc dynamic public func adColonyAdViewDidFail(toLoad error: AdColony.AdColonyAdRequestError)
  @objc dynamic public func adColonyAdViewDidReceiveClick(_ adView: AdColony.AdColonyAdView)
}
