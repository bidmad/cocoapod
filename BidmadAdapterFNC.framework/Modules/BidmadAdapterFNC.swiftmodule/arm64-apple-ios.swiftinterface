// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name BidmadAdapterFNC
import BUAdSDK
@_exported import BidmadAdapterFNC
import Foundation
import Swift
import Tapjoy
import UIKit
import _Concurrency
@objc open class BidmadAdapterFNCAdEssential : ObjectiveC.NSObject {
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func setBidmadController(_ bidmadController: Swift.AnyObject)
  @objc deinit
}
@objc public protocol BidmadAdapterEssential {
  @objc init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc func load()
  @objc func setBidmadController(_ bidmadController: Swift.AnyObject)
  @objc func show()
  @objc func remove()
  @objc func setIsDebug(_ isDebug: Swift.Bool)
}
@objc public protocol BidmadAdapterBannerAdditional {
  @objc func setBannerSize(_ sizeString: Swift.String)
  @objc func hide()
}
@objc public protocol BidmadAdapterRewardAdditional {
  @objc func setIsRewardedAd(_ isRewardedAd: Swift.Bool)
}
@objc public protocol BidmadAdapterOfferwallAdditional {
  @objc func getCurrency(completionHandler: ((Foundation.NSError?, [Swift.String : Any]?) -> Swift.Void)?)
  @objc func spendCurrency(_ amount: Swift.Int, completionHandler: ((Foundation.NSError?, [Swift.String : Any]?) -> Swift.Void)?)
}
@objc open class BIDMADPangleNativeAd : ObjectiveC.NSObject {
  @objc public static var ASYNC_DEALLOCATED_WARNING: Swift.String
  @objc required public init(with appid: Swift.String, placementId: Swift.String?, nativeAdMediationManager: Swift.AnyObject, rootViewController: UIKit.UIViewController, nativeAdView: Swift.AnyObject, isDebug: Swift.Bool, isChildDirectedAds: Foundation.NSNumber?)
  @objc deinit
}
extension BidmadAdapterFNC.BIDMADPangleNativeAd {
  @objc dynamic public func loadNativeAd()
  @objc dynamic public func showNativeAd()
  @objc dynamic public func hideNativeAd()
  public func remove()
}
extension BidmadAdapterFNC.BIDMADPangleNativeAd : BUAdSDK.BUNativeAdsManagerDelegate {
  @objc dynamic public func nativeAdsManagerSuccess(toLoad adsManager: BUAdSDK.BUNativeAdsManager, nativeAds nativeAdDataArray: [BUAdSDK.BUNativeAd]?)
  @objc dynamic public func nativeAdsManager(_ adsManager: BUAdSDK.BUNativeAdsManager, didFailWithError error: Swift.Error?)
}
extension BidmadAdapterFNC.BIDMADPangleNativeAd : BUAdSDK.BUNativeAdDelegate {
  @objc dynamic public func nativeAdDidLoad(_ nativeAd: BUAdSDK.BUNativeAd)
  @objc dynamic public func nativeAd(_ nativeAd: BUAdSDK.BUNativeAd, didFailWithError error: Swift.Error?)
  @objc dynamic public func nativeAdDidBecomeVisible(_ nativeAd: BUAdSDK.BUNativeAd)
  @objc dynamic public func nativeAdDidCloseOtherController(_ nativeAd: BUAdSDK.BUNativeAd, interactionType: BUAdSDK.BUInteractionType)
  @objc dynamic public func nativeAdDidClick(_ nativeAd: BUAdSDK.BUNativeAd, with view: UIKit.UIView?)
  @objc dynamic public func nativeAd(_ nativeAd: BUAdSDK.BUNativeAd?, dislikeWithReason filterWords: [BUAdSDK.BUDislikeWords]?)
}
extension BidmadAdapterFNC.BIDMADPangleNativeAd : BUAdSDK.BUVideoAdViewDelegate {
  @objc dynamic public func videoAdView(_ videoAdView: BUAdSDK.BUVideoAdView, didLoadFailWithError error: Swift.Error?)
  @objc dynamic public func videoAdView(_ videoAdView: BUAdSDK.BUVideoAdView, stateDidChanged playerState: BUAdSDK.BUPlayerPlayState)
  @objc dynamic public func playerDidPlayFinish(_ videoAdView: BUAdSDK.BUVideoAdView)
  @objc dynamic public func videoAdViewDidClick(_ videoAdView: BUAdSDK.BUVideoAdView)
  @objc dynamic public func videoAdViewFinishViewDidClick(_ videoAdView: BUAdSDK.BUVideoAdView)
  @objc dynamic public func videoAdViewDidCloseOtherController(_ videoAdView: BUAdSDK.BUVideoAdView, interactionType: BUAdSDK.BUInteractionType)
}
@_inheritsConvenienceInitializers @objc open class BidmadTapjoy : BidmadAdapterFNC.BidmadAdapterFNCAdEssential {
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func load()
  @objc public func shouldLoadAd()
  @objc public func show()
  @objc public func remove()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc deinit
}
extension BidmadAdapterFNC.BidmadTapjoy : BidmadAdapterFNC.BidmadAdapterOfferwallAdditional {
  @objc dynamic public func getCurrency(completionHandler: ((Foundation.NSError?, [Swift.String : Any]?) -> Swift.Void)?)
  @objc dynamic public func spendCurrency(_ amount: Swift.Int, completionHandler: ((Foundation.NSError?, [Swift.String : Any]?) -> Swift.Void)?)
}
extension BidmadAdapterFNC.BidmadTapjoy : Tapjoy.TJPlacementDelegate {
  @objc dynamic public func requestDidSucceed(_ placement: Tapjoy.TJPlacement!)
  @objc dynamic public func contentIsReady(_ placement: Tapjoy.TJPlacement!)
  @objc dynamic public func requestDidFail(_ placement: Tapjoy.TJPlacement!, error: Swift.Error!)
  @objc dynamic public func contentDidAppear(_ placement: Tapjoy.TJPlacement!)
  @objc dynamic public func contentDidDisappear(_ placement: Tapjoy.TJPlacement!)
  @objc dynamic public func didClick(_ placement: Tapjoy.TJPlacement!)
  @objc dynamic public func placement(_ placement: Tapjoy.TJPlacement!, didRequestPurchase request: Tapjoy.TJActionRequest!, productId: Swift.String!)
  @objc dynamic public func placement(_ placement: Tapjoy.TJPlacement!, didRequestReward request: Tapjoy.TJActionRequest!, itemId: Swift.String!, quantity: Swift.Int32)
  @objc dynamic public func placement(_ placement: Tapjoy.TJPlacement!, didRequestCurrency request: Tapjoy.TJActionRequest!, currency: Swift.String!, amount: Swift.Int32)
  @objc dynamic public func placement(_ placement: Tapjoy.TJPlacement!, didRequestNavigation request: Tapjoy.TJActionRequest!, location: Swift.String!)
}
extension BidmadAdapterFNC.BidmadTapjoy : Tapjoy.TJPlacementVideoDelegate {
  @objc dynamic public func videoDidStart(_ placement: Tapjoy.TJPlacement!)
  @objc dynamic public func videoDidComplete(_ placement: Tapjoy.TJPlacement!)
  @objc dynamic public func videoDidFail(_ placement: Tapjoy.TJPlacement!, error errorMsg: Swift.String!)
}
@_inheritsConvenienceInitializers @objc open class BidmadAdFit : BidmadAdapterFNC.BidmadAdapterFNCAdEssential {
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc deinit
}
extension BidmadAdapterFNC.BidmadAdFit : BidmadAdapterFNC.BidmadAdapterEssential {
  @objc dynamic public func load()
  @objc dynamic public func show()
  @objc dynamic public func remove()
  @objc dynamic public func setIsDebug(_ isDebug: Swift.Bool)
}
extension BidmadAdapterFNC.BidmadAdFit {
  @objc dynamic public func setBannerSize(_ sizeString: Swift.String)
  @objc dynamic public func hide()
}
extension BidmadAdapterFNC.BidmadAdFit {
  @objc dynamic public func adViewDidFailToReceiveAd(_ bannerAdView: Swift.AnyObject, error: Swift.Error)
  @objc dynamic public func adViewDidReceiveAd(_ bannerAdView: Swift.AnyObject)
  @objc dynamic public func adViewDidClickAd(_ bannerAdView: Swift.AnyObject)
}
@_inheritsConvenienceInitializers @objc public class BidmadAdapterFNCUtility : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc deinit
}
