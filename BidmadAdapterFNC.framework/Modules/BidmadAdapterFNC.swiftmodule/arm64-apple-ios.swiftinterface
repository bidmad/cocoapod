// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name BidmadAdapterFNC
import ADOPUtility
import AVFoundation
import BUAdSDK
@_exported import BidmadAdapterFNC
import Foundation
import GoogleMobileAds
import IASDKCore
import MediaPlayer
import Network
import Swift
import UIKit
import WebKit
import _Concurrency
@_inheritsConvenienceInitializers @objcMembers open class BidmadAdFit : ADOPUtility.BidmadAdapterAdEssential, ADOPUtility.BidmadAdapterEssential {
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func load()
  @objc public func show()
  @objc public func remove()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func setBannerSize(_ sizeString: Swift.String)
  @objc public func hide()
  @objc public func adViewDidFailToReceiveAd(_ bannerAdView: Swift.AnyObject, error: Swift.Error)
  @objc public func adViewDidReceiveAd(_ bannerAdView: Swift.AnyObject)
  @objc public func adViewDidClickAd(_ bannerAdView: Swift.AnyObject)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class BidmadAdapterFNCUtility : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers open class BidmadAdmobAdapterPangleReward : ObjectiveC.NSObject, GoogleMobileAds.GADMediationAdapter, GoogleMobileAds.GADMediationRewardedAd {
  public var delegate: GoogleMobileAds.GADMediationRewardedAdEventDelegate?
  @objc required override dynamic public init()
  @objc public func present(from viewController: UIKit.UIViewController)
  @objc public static func adapterVersion() -> GoogleMobileAds.GADVersionNumber
  @objc public static func adSDKVersion() -> GoogleMobileAds.GADVersionNumber
  public static func returnGADVersion(from string: Swift.String) -> GoogleMobileAds.GADVersionNumber
  @objc public static func networkExtrasClass() -> GoogleMobileAds.GADAdNetworkExtras.Type?
  @objc public func loadRewardedAd(for adConfiguration: GoogleMobileAds.GADMediationRewardedAdConfiguration, completionHandler: @escaping GoogleMobileAds.GADMediationRewardedLoadCompletionHandler)
  @objc deinit
}
extension BidmadAdapterFNC.BidmadAdmobAdapterPangleReward : BUAdSDK.BURewardedVideoAdDelegate {
  @objc dynamic public func rewardedVideoAdDidLoad(_ rewardedVideoAd: BUAdSDK.BURewardedVideoAd)
  @objc dynamic public func rewardedVideoAdVideoDidLoad(_ rewardedVideoAd: BUAdSDK.BURewardedVideoAd)
  @objc dynamic public func rewardedVideoAd(_ rewardedVideoAd: BUAdSDK.BURewardedVideoAd, didFailWithError error: Swift.Error?)
  @objc dynamic public func rewardedVideoAdWillVisible(_ rewardedVideoAd: BUAdSDK.BURewardedVideoAd)
  @objc dynamic public func rewardedVideoAdDidVisible(_ rewardedVideoAd: BUAdSDK.BURewardedVideoAd)
  @objc dynamic public func rewardedVideoAdWillClose(_ rewardedVideoAd: BUAdSDK.BURewardedVideoAd)
  @objc dynamic public func rewardedVideoAdDidClose(_ rewardedVideoAd: BUAdSDK.BURewardedVideoAd)
  @objc dynamic public func rewardedVideoAdDidClick(_ rewardedVideoAd: BUAdSDK.BURewardedVideoAd)
  @objc dynamic public func rewardedVideoAdDidPlayFinish(_ rewardedVideoAd: BUAdSDK.BURewardedVideoAd, didFailWithError error: Swift.Error?)
  @objc dynamic public func rewardedVideoAdServerRewardDidSucceed(_ rewardedVideoAd: BUAdSDK.BURewardedVideoAd, verify: Swift.Bool)
}
@objc open class BIDMADPangleNativeAd : ObjectiveC.NSObject, ADOPUtility.BIDMADNativeAdCommonInterface, ADOPUtility.BIDMADNativeAdCallbacks, BUAdSDK.BUNativeAdsManagerDelegate, BUAdSDK.BUNativeAdDelegate {
  @objc public static let ASYNC_DEALLOCATED_WARNING: Swift.String
  @objc public var isAdMob: Swift.Bool
  final public let loadCallback: ((ADOPUtility.BidmadNativeAdDataInterface?) -> Swift.Void)
  final public let clickCallback: ((ADOPUtility.BidmadNativeAdDataInterface) -> Swift.Void)
  @objc required public init(with appid: Swift.String, placementId: Swift.String?, bidmadController: Swift.AnyObject, isDebug: Swift.Bool, isChildDirectedAds: Foundation.NSNumber?, loadCallback: @escaping ((ADOPUtility.BidmadNativeAdDataInterface?) -> Swift.Void), clickCallback: @escaping ((ADOPUtility.BidmadNativeAdDataInterface?) -> Swift.Void))
  @objc public func remove()
  @objc public func nativeAdsManagerSuccess(toLoad adsManager: BUAdSDK.BUNativeAdsManager, nativeAds nativeAdDataArray: [BUAdSDK.BUNativeAd]?)
  @objc public func nativeAdsManager(_ adsManager: BUAdSDK.BUNativeAdsManager, didFailWithError error: Swift.Error?)
  @objc public func nativeAdDidBecomeVisible(_ nativeAd: BUAdSDK.BUNativeAd)
  @objc public func nativeAdDidClick(_ nativeAd: BUAdSDK.BUNativeAd, with view: UIKit.UIView?)
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadFyberInterstitial : ADOPUtility.BidmadAdapterAdEssential, ADOPUtility.BidmadAdapterEssential, ADOPUtility.BidmadAdapterRewardAdditional, IASDKCore.IAVideoContentDelegate, IASDKCore.IAMRAIDContentDelegate, IASDKCore.IAUnitDelegate {
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func load()
  @objc public func show()
  @objc public func remove()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func setIsRewardedAd(_ isRewardedAd: Swift.Bool)
  @objc public func iaParentViewController(for unitController: IASDKCore.IAUnitController?) -> UIKit.UIViewController
  @objc public func iaAdDidReward(_ unitController: IASDKCore.IAUnitController?)
  @objc public func iaAdDidReceiveClick(_ unitController: IASDKCore.IAUnitController?)
  @objc public func iaUnitControllerDidDismissFullscreen(_ unitController: IASDKCore.IAUnitController?)
  @objc deinit
}
@objc open class ATOMRewardedVideo : ObjectiveC.NSObject {
  @objc public init(with parentVC: UIKit.UIViewController, adData: Swift.Dictionary<Swift.String, Any>, bidmad: Swift.AnyObject)
  @objc public func loadAd()
  @objc public func showAd()
  @objc deinit
}
extension BidmadAdapterFNC.ATOMRewardedVideo : AVFoundation.AVAssetResourceLoaderDelegate {
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadFyberBanner : ADOPUtility.BidmadAdapterAdEssential, ADOPUtility.BidmadAdapterEssential, ADOPUtility.BidmadAdapterBannerAdditional, IASDKCore.IAMRAIDContentDelegate, IASDKCore.IAUnitDelegate {
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func load()
  @objc public func show()
  @objc public func hide()
  @objc public func remove()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func setBannerSize(_ sizeString: Swift.String)
  @objc public func iaParentViewController(for unitController: IASDKCore.IAUnitController?) -> UIKit.UIViewController
  @objc public func iaAdDidReceiveClick(_ unitController: IASDKCore.IAUnitController?)
  @objc public func iaUnitControllerDidDismissFullscreen(_ unitController: IASDKCore.IAUnitController?)
  @objc deinit
}
